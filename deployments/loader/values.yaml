global:
  objectStore:
    s3:
      endpointUrl:
      region:
      bucket:
      assumeRole:
        roleArn:
        externalId:

  awsSecret:
    name:
    accessKeyIdKey:
    secretAccessKeyKey:

  worker:
    registrationKeySecret:
      name:
      key:
    tls:
      enable: false
    # If specified, use this as the address for accessing the control-plane services.
    controlPlaneAddr: ""

baseModels:

modelLoadInterval: 1m
runOnce: false

huggingFaceSecret:
  name:
  apiKeyKey:

downloader:
  kind: s3
  s3:
    endpointUrl: https://s3.us-west-2.amazonaws.com
    region: us-west-2
    bucket: llm-operator-models
    pathPrefix: v1/base-models
  huggingFace:
    cacheDir:

# The following default values work if model-manager-server runs in the same namespace.
modelManagerServerWorkerServiceAddr: model-manager-server-worker-service-grpc:8082

objectStore:
  s3:
    pathPrefix: models
    baseModelPathPrefix: base-models

replicaCount: 1
image:
  repository: public.ecr.aws/cloudnatix/llm-operator/model-manager-loader
  pullPolicy: IfNotPresent

serviceAccount:
  create: false
  name: ""

podAnnotations:
nodeSelector:
affinity:
tolerations:

version:
resources:
  requests:
    cpu: "250m"
    memory: "500Mi"
  limits:
    cpu: "250m"

podSecurityContext:
  fsGroup: 2000
securityContext:
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000

persistentVolume:
  # If true, engine will create/use a PVC. If false, use emptyDir
  enabled: false
  # If defined, the engine uses the given PVC and does not create a new one.
  # NOTE: PVC must be manually created before the volume is bound.
  existingClaim:

  storageClassName:
  # If defined, the engine uses the existing PV that has been provisioned in advance.
  volumeName:

  size: 100Gi
  accessModes:
  - ReadWriteOnce

  volumeBindingMode:
  selector:
